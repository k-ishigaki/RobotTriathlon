%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$bin/startup.obj
end_init CODE 0 0 0 4 1
config CONFIG 0 300000 300000 E 1
$bin/release.obj
cinit CODE 0 FFF2 FFF2 6 1
text0 CODE 0 FFF8 FFF8 8 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
BANK0 000060-0000FF 1
BANK1 000100-0001FF 1
BANK10 000A00-000AFF 1
BANK11 000B00-000BFF 1
BANK12 000C00-000CFF 1
BANK13 000D00-000DFF 1
BANK14 000E00-000EFF 1
BANK15 000F00-000F37 1
BANK2 000200-0002FF 1
BANK3 000300-0003FF 1
BANK4 000400-0004FF 1
BANK5 000500-0005FF 1
BANK6 000600-0006FF 1
BANK7 000700-0007FF 1
BANK8 000800-0008FF 1
BANK9 000900-0009FF 1
BIGRAM 000001-000F37 1
CODE 000004-00FFF1 1
COMRAM 000001-00005F 1
CONST 000004-00FFF1 1
EEDATA F00000-F003FF 1
IDLOC 200000-200007 1
MEDIUMCONST 001000-00FFF1 1
RAM 000060-000F37 1
SFR 000F38-000FFF 1
SMALLCONST 001000-00FFF1 1
STACK 000060-0009FF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <file name>:<line number> <address> <psect name> <class name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$bin/release.obj
"/home/kazuki/デスクトップ/RobotTriathlon/bin/release.as":726 FFF2 cinit CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/release.as":728 FFF2 cinit CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/release.as":731 FFF2 cinit CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/release.as":737 FFF2 cinit CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/release.as":738 FFF2 cinit CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/release.as":739 FFF4 cinit CODE
"/opt/microchip/xc8/v1.33/include/pic18f26k22.h":16881 FFF8 text0 CODE
"/home/kazuki/デスクトップ/RobotTriathlon/src/main.c":6 FFF8 text0 CODE
"/home/kazuki/デスクトップ/RobotTriathlon/src/main.c":7 FFF8 text0 CODE
"/home/kazuki/デスクトップ/RobotTriathlon/src/main.c":8 FFFA text0 CODE
"/home/kazuki/デスクトップ/RobotTriathlon/src/main.c":9 FFFC text0 CODE
$bin/startup.obj
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":59 0 text CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":60 0 text CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":61 0 text CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":63 0 text CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":99 0 reset_vec CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":107 0 init CODE
"/home/kazuki/デスクトップ/RobotTriathlon/bin/startup.as":123 0 end_init CODE
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__CFG_XINST$OFF 0 0 ABS 0 - bin/release.obj
__S0 30000E 0 ABS 0 - bin/release.obj
__S1 0 0 ABS 0 - bin/release.obj
__S2 0 0 ABS 0 - bin/release.obj
__Hintentry 0 0 ABS 0 intentry bin/release.obj
__Lintentry 0 0 ABS 0 intentry bin/release.obj
__CFG_BOREN$ON 0 0 ABS 0 - bin/release.obj
_main FFF8 0 CODE 0 text0 bin/release.obj
___sp 0 0 STACK 2 stack bin/startup.obj
start 0 0 CODE 0 init bin/startup.obj
__Hirdata 0 0 CODE 0 irdata bin/release.obj
__Lirdata 0 0 CODE 0 irdata bin/release.obj
__HRAM 0 0 ABS 0 - bin/release.obj
__LRAM 1 0 ABS 0 - bin/release.obj
__Hconfig 30000E 0 CONFIG 0 config bin/release.obj
__Lconfig 300000 0 CONFIG 0 config bin/release.obj
__CFG_FOSC$INTIO67 0 0 ABS 0 - bin/release.obj
__Hbigram 0 0 ABS 0 bigram bin/release.obj
__Lbigram 0 0 ABS 0 bigram bin/release.obj
__Hrparam 0 0 ABS 0 rparam bin/release.obj
__Lrparam 0 0 ABS 0 rparam bin/release.obj
__Hram 0 0 ABS 0 ram bin/release.obj
__Lram 0 0 ABS 0 ram bin/release.obj
__Hcomram 0 0 ABS 0 comram bin/release.obj
__Lcomram 0 0 ABS 0 comram bin/release.obj
__Hsfr 0 0 ABS 0 sfr bin/release.obj
__Lsfr 0 0 ABS 0 sfr bin/release.obj
__Hbss 0 0 RAM 1 bss bin/release.obj
__CFG_STVREN$ON 0 0 ABS 0 - bin/release.obj
__Lbss 0 0 RAM 1 bss bin/release.obj
__Hnvrram 0 0 COMRAM 1 nvrram bin/release.obj
__Lnvrram 0 0 COMRAM 1 nvrram bin/release.obj
__CFG_PWRTEN$ON 0 0 ABS 0 - bin/release.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data bin/release.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data bin/release.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs bin/release.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs bin/release.obj
__Hbigbss 0 0 BIGRAM 1 bigbss bin/release.obj
__Lbigbss 0 0 BIGRAM 1 bigbss bin/release.obj
__Hintret 0 0 ABS 0 intret bin/release.obj
__Lintret 0 0 ABS 0 intret bin/release.obj
__Hramtop 1000 0 RAM 0 ramtop bin/release.obj
__Lramtop 1000 0 RAM 0 ramtop bin/release.obj
__Hstruct 0 0 COMRAM 1 struct bin/release.obj
__Lstruct 0 0 COMRAM 1 struct bin/release.obj
__Hbigdata 0 0 BIGRAM 1 bigdata bin/release.obj
__Lbigdata 0 0 BIGRAM 1 bigdata bin/release.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst bin/release.obj
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst bin/release.obj
__Hfarbss 0 0 FARRAM 0 farbss bin/release.obj
__Lfarbss 0 0 FARRAM 0 farbss bin/release.obj
__Hintcode 0 0 CODE 0 intcode bin/release.obj
__Lintcode 0 0 CODE 0 intcode bin/release.obj
__Hfardata 0 0 FARRAM 0 fardata bin/release.obj
__Lfardata 0 0 FARRAM 0 fardata bin/release.obj
__Habs1 0 0 ABS 0 abs1 bin/release.obj
__Labs1 0 0 ABS 0 abs1 bin/release.obj
__CFG_EBTR0$OFF 0 0 ABS 0 - bin/release.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM bin/release.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM bin/release.obj
__CFG_EBTR1$OFF 0 0 ABS 0 - bin/release.obj
__CFG_CCP2MX$PORTC1 0 0 ABS 0 - bin/release.obj
__CFG_EBTR2$OFF 0 0 ABS 0 - bin/release.obj
__CFG_CCP3MX$PORTB5 0 0 ABS 0 - bin/release.obj
__Hdata 0 0 ABS 0 data bin/release.obj
__Ldata 0 0 ABS 0 data bin/release.obj
__CFG_EBTR3$OFF 0 0 ABS 0 - bin/release.obj
stackhi 9FF 0 ABS 0 - bin/startup.obj
__Htemp 0 0 COMRAM 1 temp bin/release.obj
__Ltemp 0 0 COMRAM 1 temp bin/release.obj
stacklo 60 0 ABS 0 - bin/startup.obj
__Hrbit 0 0 COMRAM 1 rbit bin/release.obj
__Lrbit 0 0 COMRAM 1 rbit bin/release.obj
__Hinit 0 0 CODE 0 init bin/release.obj
__Linit 0 0 CODE 0 init bin/release.obj
__Hintcodelo 0 0 CODE 0 intcodelo bin/release.obj
__Lintcodelo 0 0 CODE 0 intcodelo bin/release.obj
__Hrbss 0 0 COMRAM 1 rbss bin/release.obj
__end_of_main 10000 0 CODE 0 text0 bin/release.obj
__Lrbss 0 0 COMRAM 1 rbss bin/release.obj
__Htext 0 0 ABS 0 text bin/release.obj
__Ltext 0 0 ABS 0 text bin/release.obj
__CFG_LVP$ON 0 0 ABS 0 - bin/release.obj
end_of_initialization FFF2 0 CODE 0 cinit bin/release.obj
__Hibigdata 0 0 CODE 0 ibigdata bin/release.obj
__Libigdata 0 0 CODE 0 ibigdata bin/release.obj
__Hifardata 0 0 CODE 0 ifardata bin/release.obj
__Lifardata 0 0 CODE 0 ifardata bin/release.obj
__Hbank0 0 0 ABS 0 bank0 bin/release.obj
__Lbank0 0 0 ABS 0 bank0 bin/release.obj
__Hbank1 0 0 ABS 0 bank1 bin/release.obj
__Lbank1 0 0 ABS 0 bank1 bin/release.obj
__Hbank2 0 0 ABS 0 bank2 bin/release.obj
__Lbank2 0 0 ABS 0 bank2 bin/release.obj
__Hbank3 0 0 ABS 0 bank3 bin/release.obj
__Lbank3 0 0 ABS 0 bank3 bin/release.obj
__Hbank4 0 0 ABS 0 bank4 bin/release.obj
__Lbank4 0 0 ABS 0 bank4 bin/release.obj
__Hbank5 0 0 ABS 0 bank5 bin/release.obj
__Lbank5 0 0 ABS 0 bank5 bin/release.obj
__Hpowerup 0 0 CODE 0 powerup bin/release.obj
__Lpowerup 0 0 CODE 0 powerup bin/release.obj
__Hbank6 0 0 ABS 0 bank6 bin/release.obj
__Lbank6 0 0 ABS 0 bank6 bin/release.obj
__Hbank7 0 0 ABS 0 bank7 bin/release.obj
__Lbank7 0 0 ABS 0 bank7 bin/release.obj
__Hbank8 0 0 ABS 0 bank8 bin/release.obj
__Lbank8 0 0 ABS 0 bank8 bin/release.obj
__Htext0 0 0 ABS 0 text0 bin/release.obj
__Ltext0 0 0 ABS 0 text0 bin/release.obj
__Hbank9 0 0 ABS 0 bank9 bin/release.obj
__Lbank9 0 0 ABS 0 bank9 bin/release.obj
__ptext0 FFF8 0 CODE 0 text0 bin/release.obj
__CFG_P2BMX$PORTB5 0 0 ABS 0 - bin/release.obj
__CFG_T3CMX$PORTC0 0 0 ABS 0 - bin/release.obj
__Hclrtext 0 0 ABS 0 clrtext bin/release.obj
__Lclrtext 0 0 ABS 0 clrtext bin/release.obj
__end_of__initialization FFF2 0 CODE 0 cinit bin/release.obj
__CFG_PRICLKEN$OFF 0 0 ABS 0 - bin/release.obj
__Hidata 0 0 CODE 0 idata bin/release.obj
__Lidata 0 0 CODE 0 idata bin/release.obj
__Hrdata 0 0 COMRAM 1 rdata bin/release.obj
__Lrdata 0 0 COMRAM 1 rdata bin/release.obj
__Hidloc 0 0 IDLOC 0 idloc bin/release.obj
__Lidloc 0 0 IDLOC 0 idloc bin/release.obj
__Hstack 0 0 STACK 2 stack bin/release.obj
__Lstack 0 0 STACK 2 stack bin/release.obj
__Hparam 0 0 ABS 0 rparam bin/release.obj
__Lparam 0 0 ABS 0 rparam bin/release.obj
__Hspace_0 30000E 0 ABS 0 - bin/release.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM bin/release.obj
__Lspace_0 0 0 ABS 0 - bin/release.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM bin/release.obj
__pcstackCOMRAM 0 0 COMRAM 1 cstackCOMRAM bin/release.obj
__Hspace_1 0 0 ABS 0 - bin/release.obj
__Lspace_1 0 0 ABS 0 - bin/release.obj
__Hsmallconst 0 0 SMALLCONST 0 smallconst bin/release.obj
__Lsmallconst 0 0 SMALLCONST 0 smallconst bin/release.obj
__Hspace_2 0 0 ABS 0 - bin/release.obj
__Lspace_2 0 0 ABS 0 - bin/release.obj
__Hnvbit 0 0 COMRAM 1 nvbit bin/release.obj
__Lnvbit 0 0 COMRAM 1 nvbit bin/release.obj
__Hcinit 0 0 ABS 0 cinit bin/release.obj
__Lcinit 0 0 ABS 0 cinit bin/release.obj
__pcinit FFF2 0 CODE 0 cinit bin/release.obj
__CFG_EBTRB$OFF 0 0 ABS 0 - bin/release.obj
__ramtop 1000 0 RAM 0 ramtop bin/startup.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst bin/startup.obj
__size_of_main 0 0 ABS 0 - bin/release.obj
__Hconst 0 0 CODE 0 const bin/release.obj
__Lconst 0 0 CODE 0 const bin/release.obj
__CFG_PLLCFG$ON 0 0 ABS 0 - bin/release.obj
__CFG_WDTPS$16384 0 0 ABS 0 - bin/release.obj
__CFG_DEBUG$OFF 0 0 ABS 0 - bin/release.obj
__CFG_WRT0$OFF 0 0 ABS 0 - bin/release.obj
__CFG_WRT1$OFF 0 0 ABS 0 - bin/release.obj
__CFG_MCLRE$EXTMCLR 0 0 ABS 0 - bin/release.obj
__CFG_WRT2$OFF 0 0 ABS 0 - bin/release.obj
__Hbank10 0 0 ABS 0 bank10 bin/release.obj
__Lbank10 0 0 ABS 0 bank10 bin/release.obj
__Hbank11 0 0 ABS 0 bank11 bin/release.obj
__Lbank11 0 0 ABS 0 bank11 bin/release.obj
__CFG_WRT3$OFF 0 0 ABS 0 - bin/release.obj
__Hbank12 0 0 ABS 0 bank12 bin/release.obj
__Lbank12 0 0 ABS 0 bank12 bin/release.obj
__Hbank13 0 0 ABS 0 bank13 bin/release.obj
__Lbank13 0 0 ABS 0 bank13 bin/release.obj
__Hbank14 0 0 ABS 0 bank14 bin/release.obj
__Lbank14 0 0 ABS 0 bank14 bin/release.obj
__Hbank15 0 0 ABS 0 bank15 bin/release.obj
__Lbank15 0 0 ABS 0 bank15 bin/release.obj
___inthi_sp 0 0 STACK 2 stack bin/startup.obj
___intlo_sp 0 0 STACK 2 stack bin/startup.obj
_INTCONbits FF2 0 ABS 0 - bin/release.obj
__Hend_init 4 0 CODE 0 end_init bin/release.obj
__Lend_init 0 0 CODE 0 end_init bin/release.obj
__CFG_WDTEN$SWON 0 0 ABS 0 - bin/release.obj
__CFG_CP0$OFF 0 0 ABS 0 - bin/release.obj
__smallconst 0 0 SMALLCONST 0 smallconst bin/startup.obj
__CFG_CP1$OFF 0 0 ABS 0 - bin/release.obj
__Hreset_vec 0 0 CODE 0 reset_vec bin/release.obj
__Lreset_vec 0 0 CODE 0 reset_vec bin/release.obj
__CFG_CP3$OFF 0 0 ABS 0 - bin/release.obj
__CFG_BORV$190 0 0 ABS 0 - bin/release.obj
__accesstop 60 0 ABS 0 - bin/startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body bin/release.obj
__Lintcode_body 0 0 ABS 0 intcode_body bin/release.obj
__CFG_PBADEN$ON 0 0 ABS 0 - bin/release.obj
intlevel0 0 0 CODE 0 text bin/startup.obj
intlevel1 0 0 CODE 0 text bin/startup.obj
__CFG_WRTB$OFF 0 0 ABS 0 - bin/release.obj
intlevel2 0 0 CODE 0 text bin/startup.obj
intlevel3 0 0 CODE 0 text bin/startup.obj
__CFG_WRTC$OFF 0 0 ABS 0 - bin/release.obj
__CFG_WRTD$OFF 0 0 ABS 0 - bin/release.obj
__CFG_CPB$OFF 0 0 ABS 0 - bin/release.obj
__CFG_HFOFST$OFF 0 0 ABS 0 - bin/release.obj
__CFG_CPD$OFF 0 0 ABS 0 - bin/release.obj
start_initialization FFF2 0 CODE 0 cinit bin/release.obj
__CFG_IESO$OFF 0 0 ABS 0 - bin/release.obj
__initialization FFF2 0 CODE 0 cinit bin/release.obj
__activetblptr 0 0 ABS 0 - bin/release.obj
__CFG_FCMEN$ON 0 0 ABS 0 - bin/release.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect in on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
reset_vec 0 0 0 4 1
config 0 300000 300000 E 1
text0 0 FFF8 FFF8 8 1
cinit 0 FFF2 FFF2 6 1
